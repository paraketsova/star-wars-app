{"version":3,"sources":["components/CharacterModal.js","App.js","reportWebVitals.js","index.js"],"names":["CharacterModal","data","closeFn","className","name","gender","birth_year","height","mass","hair_color","skin_color","eye_color","onClick","App","useState","characters","setCharacters","count","setCount","pageNumber","setPageNumber","selectedCharacter","setSelectedCharacter","filterQuery","setFilterQuery","loading","setLoading","getApiData","page","a","query","axios","result","results","useEffect","maxPage","Math","ceil","pages","i","push","src","alt","onSubmit","event","preventDefault","type","value","onChange","target","placeholder","length","map","item","url","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24b4e992.chunk.js","sourcesContent":["function CharacterModal({ data, closeFn }) {\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-content\">\n        <h1>{data.name}</h1>\n\n        <table className=\"modal-table\">\n          <tbody>\n            <tr>\n              <th>Gender</th>\n              <td>{data.gender}</td>\n            </tr>\n            <tr>\n              <th>Birth year</th>\n              <td>{data.birth_year}</td>\n            </tr>\n            <tr>\n              <th>Height</th>\n              <td>{data.height}</td>\n            </tr>\n            <tr>\n              <th>Mass</th>\n              <td>{data.mass}</td>\n            </tr>\n            <tr>\n              <th>Hair color</th>\n              <td>{data.hair_color}</td>\n            </tr>\n            <tr>\n              <th>Skin color</th>\n              <td>{data.skin_color}</td>\n            </tr>\n            <tr>\n              <th>Eye color</th>\n              <td>{data.eye_color}</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <button className=\"close-btn\" onClick={closeFn}>Close</button>\n      </div>\n    </div>\n  )\n}\n\nexport default CharacterModal;\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport CharacterModal from './components/CharacterModal';\n\nfunction App() {\n  const [characters, setCharacters] = useState([]);\n  const [count, setCount] = useState();\n  const [pageNumber, setPageNumber] = useState(1);\n  const [selectedCharacter, setSelectedCharacter] = useState(null);\n  const [filterQuery, setFilterQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const getApiData = async (page, query = filterQuery) => {\n    setLoading(true);\n    const result = await axios('https://swapi.dev/api/people/?page=' + page + '&search=' + query);\n    setLoading(false);\n    setCharacters(result.data.results);\n    setCount(result.data.count);\n    setPageNumber(page);\n    setSelectedCharacter(null);\n  };\n\n  const onFilterChange = event => {\n    setFilterQuery(event.target.value);\n  };\n\n  const onFilterSubmit = event => {\n    event.preventDefault();\n    getApiData(1);\n  };\n\n  const resetFilter = () => {\n    setFilterQuery('');\n    getApiData(1, '');\n  };\n\n  useEffect(() => {\n    getApiData(1);\n  }, []); // eslint-disable-line\n\n  let maxPage = Math.ceil(count / 10);\n  let pages = [];\n  for (let i = 1; i <= maxPage; i++) {\n    pages.push(i);\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <img src=\"./title-logo.png\" alt=\"STAR WARS characters\"/>\n      </header>\n\n      <main>\n        {loading ? (\n          <p>Loading...</p>\n        ) : (\n          <>\n            <form onSubmit={onFilterSubmit}>\n              <input type=\"search\" value={filterQuery} onChange={onFilterChange} placeholder=\"Filter by name...\"/>\n              <button type=\"submit\">üîç</button>\n            </form>\n\n            {characters.length === 0 ? (\n              <div className=\"empty-results\">\n                <p>Your search did not match any Star Wars characters.</p>\n                <p>\n                  You can try a different search query,\n                  or <button onClick={resetFilter}>display all characters</button>\n                </p>\n              </div>\n            ) : (\n              <>\n                <div className=\"counters\">\n                  <span>Total characters: {count}</span>\n                  <span>Page: {pageNumber} of {maxPage}</span>\n                </div>\n\n                <table>\n                  <thead>\n                    <tr>\n                      <th className=\"col1\">Name</th>\n                      <th className=\"col2\">Gender</th>\n                      <th className=\"col3\">Birth year</th>\n                    </tr>\n                  </thead>\n\n                  <tbody>\n                    {characters.map(item => (\n                      <tr key={item.url}>\n                        <td className=\"character-name\" onClick={() => setSelectedCharacter(item)}>\n                          {item.name}\n                        </td>\n                        <td className=\"col2\">{item.gender}</td>\n                        <td className=\"col3\">{item.birth_year}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n\n                <ul>\n                  {pages.map(i => (\n                    <li key={i}>\n                      <button onClick={() => getApiData(i)} className={i === pageNumber ? 'active' : ''}>{i}</button>\n                    </li>\n                  ))}\n                </ul>\n\n                {selectedCharacter !== null && (\n                  <CharacterModal data={selectedCharacter} closeFn={() => setSelectedCharacter(null)}/>\n                )}\n              </>\n            )}\n          </>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}